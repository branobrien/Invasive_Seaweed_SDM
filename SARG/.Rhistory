knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '~/Documents/Algae Lab UNH/Species Distribution Modeling/V4 - Jan 2022')
setwd("~/Documents/Algae Lab UNH/Species Distribution Modeling/V4 - Jan 2022")
library(ggplot2)
library(ggspatial)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(raster)
library(dismo)
library(rJava)
library(usdm)
library(terra)
# global
ggplot(data=world) +
geom_sf(color='black', fill='gray') +
geom_point(data=occu.sarg, aes(x=longitude, y=latitude),
color='red', fill='red', size=1)+
labs(caption = 'Figure 1: Global occurrence records of Sargassum muticum.',
x = '', y = '') +
coord_sf(expand = F) +
theme_map
world <- ne_countries(scale='medium', returnclass='sf')
# global
ggplot(data=world) +
geom_sf(color='black', fill='gray') +
geom_point(data=occu.sarg, aes(x=longitude, y=latitude),
color='red', fill='red', size=1)+
labs(caption = 'Figure 1: Global occurrence records of Sargassum muticum.',
x = '', y = '') +
coord_sf(expand = F) +
theme_map
occur.sarg <- read.csv('DASY/DASY Occur/Dasy Maxent V4.csv', header=T)
head(occur.sarg)
occur.sarg <- as.data.frame(occur.sarg)
# global
ggplot(data=world) +
geom_sf(color='black', fill='gray') +
geom_point(data=occur.sarg, aes(x=longitude, y=latitude),
color='red', fill='red', size=1)+
labs(caption = 'Figure 1: Global occurrence records of Sargassum muticum.',
x = '', y = '') +
coord_sf(expand = F) +
theme_map
theme_map <- theme(panel.background = element_rect(color = 'black', fill = 'lightblue'),
panel.border = element_rect(color = 'black', fill=NA))
# global
ggplot(data=world) +
geom_sf(color='black', fill='gray') +
geom_point(data=occur.sarg, aes(x=longitude, y=latitude),
color='red', fill='red', size=1)+
labs(caption = 'Figure 1: Global occurrence records of Sargassum muticum.',
x = '', y = '') +
coord_sf(expand = F) +
theme_map
occur.sarg <- read.csv('SARG/SARG Occur/Sarg max 2.csv', header=T)
head(occur.sarg)
occur.sarg <- as.data.frame(occur.sarg)
# global
ggplot(data=world) +
geom_sf(color='black', fill='gray') +
geom_point(data=occur.sarg, aes(x=longitude, y=latitude),
color='red', fill='red', size=1)+
labs(caption = 'Figure 1: Global occurrence records of Sargassum muticum.',
x = '', y = '') +
coord_sf(expand = F) +
theme_map
occur.sarg <- read.csv('SARG/SARG Occur/Sarg max 2.csv', header=T)
occur.sarg <- as.data.frame(occur.sarg)
# global
ggplot(data=world) +
geom_sf(color='black', fill='gray') +
geom_point(data=occur.sarg, aes(x=longitude, y=latitude),
color='red', fill='red', size=1)+
labs(caption = 'Figure 1: Global occurrence records of Sargassum muticum.',
x = '', y = '') +
coord_sf(expand = F) +
theme_map
SST.max <- raster('Environmental Data/Clipped_100km/e08.SST.max.asc')
SST.min <- raster('Environmental Data/Clipped_100km/e09.SST.min.asc')
SST.ran <- raster('Environmental Data/Clipped_100km/e10.SST.ra.asc')
SAL.men <- raster('Environmental Data/Clipped_100km/e07.SAL.me.asc')
NIT.max <- raster('Environmental Data/Clipped_100km/e03.NIT.max.asc')
NIT.min <- raster('Environmental Data/Clipped_100km/e04.NIT.min.asc')
PHO.max <- raster('Environmental Data/Clipped_100km/e05.PHO.max.asc')
PHO.min <- raster('Environmental Data/Clipped_100km/e06.PHO.min.asc')
DA.max <- raster('Environmental Data/Clipped_100km/e01.DA.max.asc')
DA.min <- raster('Environmental Data/Clipped_100km/e02.DA.min.asc')
## NOtes
ext.global.trim <- extent(c(-180,180,-65,65))
SST.max <- crop(SST.max, ext.global.trim)
SST.min <- crop(SST.min, ext.global.trim)
SST.ran <- crop(SST.ran, ext.global.trim)
SAL.men <- crop(SAL.men, ext.global.trim)
NIT.max <- crop(NIT.max, ext.global.trim)
NIT.min <- crop(NIT.min, ext.global.trim)
PHO.max <- crop(PHO.max, ext.global.trim)
PHO.min <- crop(PHO.min, ext.global.trim)
DA.max <- crop(DA.max, ext.global.trim)
DA.min <- crop(DA.min, ext.global.trim)
envi.global <- stack(c(SST.max,
SST.min,
SST.ran,
SAL.men,
NIT.max,
NIT.min,
PHO.max,
PHO.min))
envi.global.1 <- stack(c(SST.max,
SST.min,
# SST.ran,
SAL.men,
NIT.max,
NIT.min,
PHO.max,
PHO.min))
sarg.max.1 <- maxent(x = envi.global.1,
p = occur.sarg,
path="SARG/Maxent outputs/sarg.max.1",
args=c('linear=TRUE',        # just linear and quadratic features,
'quadratic=TRUE',     # others are too complicated and lead to overfitting
'product=FALSE',
'threshold=FALSE',
'hinge=FALSE',      #keep hinge off, response curves look terrible
'randomtestpoints=30',  #like to have 70% training and 30% testing
'responsecurves=TRUE',
'jackknife=TRUE'))
envi.global.2 <- stack(c(SST.max,
SST.min,
# SST.ran,
SAL.men,
NIT.max,
NIT.min))
sarg.max.2 <- maxent(x = envi.global.2,
p = occur.sarg,
path="SARG/Maxent outputs/sarg.max.2",
args=c('linear=TRUE',
'quadratic=TRUE',
'product=FALSE',
'threshold=FALSE',
'hinge=FALSE',
'randomtestpoints=30',
'responsecurves=TRUE',
'jackknife=TRUE'))
sarg.max.3 <- maxent(x = envi.global.3,
p = occur.sarg,
path="SARG/Maxent outputs/sarg.max.3",
args=c('linear=TRUE',
'quadratic=TRUE',
'product=FALSE',
'threshold=FALSE',
'hinge=FALSE',
'randomtestpoints=30',
'responsecurves=TRUE',
'jackknife=TRUE'))
envi.global.3 <- stack(c(SST.max,
SST.min,
# SST.ran,
SAL.men,
# NIT.max,
NIT.min))
sarg.max.3 <- maxent(x = envi.global.3,
p = occur.sarg,
path="SARG/Maxent outputs/sarg.max.3",
args=c('linear=TRUE',
'quadratic=TRUE',
'product=FALSE',
'threshold=FALSE',
'hinge=FALSE',
'randomtestpoints=30',
'responsecurves=TRUE',
'jackknife=TRUE'))
envi.global.4 <- stack(c(SST.max,
sarg.max.4 <- maxent(x = envi.global.4,
envi.global.4 <- stack(c(SST.max,
SST.min,
# SST.ran,
SAL.men))
envi.global.4 <- stack(c(SST.max,
SST.min,
# SST.ran,
SAL.men))
sarg.max.4 <- maxent(x = envi.global.4,
p = occur.sarg,
path="SARG/Maxent outputs/sarg.max.4",
args=c('linear=TRUE',
'quadratic=TRUE',
'product=FALSE',
'threshold=FALSE',
'hinge=FALSE',
'randomtestpoints=30',
'responsecurves=TRUE',
'jackknife=TRUE'))
envi.global.final <- stack(c(SST.max,
SST.min,
# SST.ran,
SAL.men))
sarg.max.final <- maxent(x = envi.global.final,
p = occur.sarg,
path="SARG/Maxent outputs/sarg.max.final",
args=c('linear=TRUE',
'quadratic=TRUE',
'product=FALSE',
'threshold=FALSE',
'hinge=FALSE',
'randomtestpoints=30',
'responsecurves=TRUE',
'jackknife=TRUE'))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '~/Documents/Algae Lab UNH/Species Distribution Modeling/V4 - Jan 2022')
occur.unda <- read.csv('UNDA/UNDA Occur/Unda max.csv', header=T)
head(occur.sarg)
head(occur.unda)
occur.unda <- as.data.frame(occur.unda)
world <- ne_countries(scale='medium', returnclass='sf')
theme_map <- theme(panel.background = element_rect(color = 'black', fill = 'lightblue'),
panel.border = element_rect(color = 'black', fill=NA))
# global
ggplot(data=world) +
geom_sf(color='black', fill='gray') +
geom_point(data=occur.unda, aes(x=longitude, y=latitude),
color='red', fill='red', size=1)+
labs(caption = 'Figure 1: Global occurrence records of Undaria pinnatifida.',
x = '', y = '') +
coord_sf(expand = F) +
theme_map
envi.global.1 <- stack(c(SST.max,
SST.min,
# SST.ran,
SAL.men,
NIT.max,
NIT.min,
PHO.max,
PHO.min))
unda.max.1 <- maxent(x = envi.global.1,
p = occur.unda,
path="UNDA/Maxent outputs/unda.max.1",
args=c('linear=TRUE',        # just linear and quadratic features,
'quadratic=TRUE',     # others are too complicated and lead to overfitting
'product=FALSE',
'threshold=FALSE',
'hinge=FALSE',      #keep hinge off, response curves look terrible
'randomtestpoints=30',  #like to have 70% training and 30% testing
'responsecurves=TRUE',
'jackknife=TRUE'))
envi.global.2 <- stack(c(SST.max,
SST.min,
# SST.ran,
SAL.men,
# NIT.max,
NIT.min,
PHO.max))
envi.global.2 <- stack(c(SST.max,
SST.min,
# SST.ran,
SAL.men,
# NIT.max,
NIT.min,
PHO.max))
unda.max.2 <- maxent(x = envi.global.2,
p = occur.unda,
path="UNDA/Maxent outputs/unda.max.2",
args=c('linear=TRUE',
'quadratic=TRUE',
'product=FALSE',
'threshold=FALSE',
'hinge=FALSE',
'randomtestpoints=30',
'responsecurves=TRUE',
'jackknife=TRUE'))
envi.global.3 <- stack(c(SST.max,
SST.min,
# SST.ran,
# SAL.men,
# NIT.max,
NIT.min,
PHO.max))
unda.max.3 <- maxent(x = envi.global.3,
p = occur.unda,
path="UNDA/Maxent outputs/unda.max.3",
args=c('linear=TRUE',
'quadratic=TRUE',
'product=FALSE',
'threshold=FALSE',
'hinge=FALSE',
'randomtestpoints=30',
'responsecurves=TRUE',
'jackknife=TRUE'))
# remove
envi.global.x <- stack(c(SST.max,
SST.min,
# SST.ran,
# SAL.men,
# NIT.max,
NIT.min,
PHO.max))
# PHO.min))
# DA.max,
# DA.min))
unda.max.x <- maxent(x = envi.global.x,
p = occur.unda,
path="UNDA/Maxent outputs/unda.max.x",
args=c('linear=TRUE',
'quadratic=TRUE',
'product=FALSE',
'threshold=FALSE',
'hinge=TRUE', #trying with hinge on, just to see what it looks like
'randomtestpoints=30',
'responsecurves=TRUE',
'jackknife=TRUE'))
envi.global.4 <- stack(c(SST.max,
SST.min,
# SST.ran,
# SAL.men,
# NIT.max,
NIT.min))
unda.max.4 <- maxent(x = envi.global.4,
p = occur.unda,
path="UNDA/Maxent outputs/unda.max.4",
args=c('linear=TRUE',
'quadratic=TRUE',
'product=FALSE',
'threshold=FALSE',
'hinge=FALSE',
'randomtestpoints=30',
'responsecurves=TRUE',
'jackknife=TRUE'))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '~/Documents/Algae Lab UNH/Species Distribution Modeling/V4 - Jan 2022')
Also, needs to be in Long, Latt order or else it messes up.
occur <- read.csv('CAUL/CAUL Occur/CAUL Occur R.csv', header=T)
head(occur)
occur <- as.data.frame(occur)
plot(occur)
# bringing in all environmental raster layers and getting them  trimmed and set up
# building raster'bricks' which are just collections of layers in same extent
# bricks are like stacks but apparently faster to work with.
## all envi layers
## these have been trimmed down in arcGIS to only the 100km belt along the coastlines
SST.max <- raster('Environmental Data/Clipped_100km/e08.SST.max.asc')
SST.min <- raster('Environmental Data/Clipped_100km/e09.SST.min.asc')
SST.ran <- raster('Environmental Data/Clipped_100km/e10.SST.ra.asc')
SAL.men <- raster('Environmental Data/Clipped_100km/e07.SAL.me.asc')
NIT.max <- raster('Environmental Data/Clipped_100km/e03.NIT.max.asc')
NIT.min <- raster('Environmental Data/Clipped_100km/e04.NIT.min.asc')
PHO.max <- raster('Environmental Data/Clipped_100km/e05.PHO.max.asc')
PHO.min <- raster('Environmental Data/Clipped_100km/e06.PHO.min.asc')
DA.max <- raster('Environmental Data/Clipped_100km/e01.DA.max.asc')
DA.min <- raster('Environmental Data/Clipped_100km/e02.DA.min.asc')
## NOtes
# Brezo had a lot to say about using DA as a variable - maybe I should just remove it from the start?
# Also said it may be worth it to include all the temp vars, max and min
# even if somewhat correlated
# need to trim off edges to make sure extents are all the same
ext.global.trim <- extent(c(-180,180,-65,65))
SST.max <- crop(SST.max, ext.global.trim)
SST.min <- crop(SST.min, ext.global.trim)
SST.ran <- crop(SST.ran, ext.global.trim)
SAL.men <- crop(SAL.men, ext.global.trim)
NIT.max <- crop(NIT.max, ext.global.trim)
NIT.min <- crop(NIT.min, ext.global.trim)
PHO.max <- crop(PHO.max, ext.global.trim)
PHO.min <- crop(PHO.min, ext.global.trim)
DA.max <- crop(DA.max, ext.global.trim)
DA.min <- crop(DA.min, ext.global.trim)
#not using DA on Brezo's suggestions
envi.global <- stack(c(SST.max,
SST.min,
SST.ran,
SAL.men,
NIT.max,
NIT.min,
PHO.max,
PHO.min))
# DA.max,
# DA.min))
envi.global.final <- stack(c(SST.max,
SST.min,
# SST.ran,
# SAL.men,
NIT.max,
# NIT.min,
PHO.max))
caul.max.final <- maxent(x = envi.global.final,
p = occur,
path="CAUL/Maxent Outputs/caul.max.final",
args=c('linear=TRUE',
'quadratic=TRUE',
'product=FALSE',
'threshold=FALSE',
'hinge=FALSE',
'randomtestpoints=30',
'responsecurves=TRUE',
'jackknife=TRUE'))
predict.caul.global <- predict(caul.max.final, envi.global.final)
ggplot() +
layer_spatial(predict.caul.global)
#save as raster for plotting in arcmap
writeRaster(predict.caul.global,
filename = 'CAUL/predict.caul.global.full',
format='ascii')
predict.caul.thresh <- predict.caul.global
predict.caul.thresh[predict.caul.thresh < 0.523] <- NA
ggplot() +
layer_spatial(predict.caul.thresh)
writeRaster(predict.caul.thresh,
filename = 'CAUL/predict.caul.thresh',
formatt= 'ascii')
